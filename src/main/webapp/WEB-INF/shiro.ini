# Shiro's configuration
# (see more at http://shiro.apache.org/configuration.html#Configuration-INIConfiguration)

#--------------
# MAIN SECTION
#--------------
[main]

# DataSource used to get users and roles, parameters can be as specified
# in https://commons.apache.org/proper/commons-dbcp/configuration.html
# Example:
#   ds = org.apache.tomcat.dbcp.dbcp2.BasicDataSource
#   ds.driverClassName = com.mysql.jdbc.Driver
#   ds.url = jdbc:mysql://my.db.server/schema
#   ds.username = mydbusername
#   ds.password = mydbpassword
ds = org.apache.tomcat.dbcp.dbcp2.BasicDataSource 
ds.driverClassName = 
ds.url = 
ds.username = 
ds.password = 

# Custom realm, extended from Apache Shiro's JdbcRealm, uses the DataSource previously declared
customRealm = mx.nic.rdap.server.shiro.CustomSecurityRealm
customRealm.dataSource = $ds

# The default query used to retrieve account data for the user, must return the user's password
# Eg. If using the Red Dog's SQL Provider reference implementation the query will be:
# customRealm.authenticationQuery = SELECT rus_pass FROM rdap_user WHERE rus_name = ?
customRealm.authenticationQuery = 

# The default query used to retrieve the roles that apply to a user, must return the roles names
# Eg. If using the Red Dog's SQL Provider reference implementation the query will be:
#customRealm.userRolesQuery = SELECT rar_name FROM rdap_user_role WHERE rus_name = ?
customRealm.userRolesQuery = 

# Use default web session manager with the custom realm
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.realms = $customRealm
securityManager.sessionManager = $sessionManager

# Disable session cookies
securityManager.sessionManager.sessionIdCookieEnabled = false

# Use Basic HTTP Authentication, if needed it can be customized to another type of authentication
authcBasic = org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter

# Realm used at HTTP header "WWW-Authenticate" when responding a 401 code
authcBasic.applicationName = rdap-server

# Enable the authentication filter. By default is enabled, but if all the resources are ment to be public and the 
# authorization isn't optional nor required then this property can have the value "false"
# (see more at http://shiro.apache.org/web.html#enabling-and-disabling-filters)
authcBasic.enabled = true

#--------------
# URLS SECTION
#--------------
[urls]

# Restricted paths that need authentication (one path per line)
#/domains/** = authcBasic
#/nameservers/** = authcBasic
#/entities/** = authcBasic

# Public paths prepared to receive credentials if they are sent.
# DO NOT COMMENT/ERASE, if the use of credentials isn't required then set '{auth-filter}.enabled = false' or
# also the filter 'anon' can be used (see more at Red Dog docs
# https://www.reddog.mx/using-apache-shiro.html#disable-basic-authentication).
/** = authcBasic[permissive]
